{
  "sksl": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform float width;\nuniform float height;\nuniform float sourceX;\nuniform float scrollFraction;\nuniform float density;\nuniform float lightStrength;\nuniform float weight;\nuniform shader tInput;\nuniform half2 tInput_size;\nuniform shader tNoise;\nuniform half2 tNoise_size;\n\nvec4 fragColor;\n\nfloat sourceY;\nvec2 resolution;\nvec2 lightSource;\n\nvec4 FLT_flutter_local_sampleTexture(vec2 uv)\n{\n    vec4 textColor = tInput.eval(tInput_size *  uv);\n    return textColor;\n}\n\nvec4 FLT_flutter_local_occlusion(vec2 uv, vec2 lightpos, vec4 objects)\n{\n    return objects * (1.0 - smoothstep(0.0, lightStrength, length(lightpos - uv)));\n}\n\nfloat FLT_flutter_local_random(vec3 xyz)\n{\n    return fract(sin(dot(xyz, vec3(12.98980045318603515625, 78.233001708984375, 151.71820068359375))) * 43758.546875);\n}\n\nfloat FLT_flutter_local_random2d(inout vec2 uv)\n{\n    uv /= vec2(256.0);\n    vec4 tex = tNoise.eval(tNoise_size *  uv);\n    return mix(tex.x, tex.y, tex.w);\n}\n\nvec4 FLT_flutter_local_fragment(vec2 uv, vec2 fragCoord)\n{\n    vec3 colour = vec3(0.0);\n    vec2 param = uv;\n    vec4 obj = FLT_flutter_local_sampleTexture(param);\n    vec2 param_1 = uv;\n    vec2 param_2 = lightSource;\n    vec4 param_3 = obj;\n    vec4 map = FLT_flutter_local_occlusion(param_1, param_2, param_3);\n    vec3 param_4 = vec3(fragCoord, 1.0);\n    float random = FLT_flutter_local_random(param_4);\n    float exposure = 0.89999997615814208984375 + (((sin(random) * 0.5) + 1.0) * 0.0500000007450580596923828125);\n    vec2 _uv = uv;\n    vec2 distance = (_uv - lightSource) * (0.0500000007450580596923828125 * density);\n    float illumination_decay = 1.0;\n    for (int i = 0; i < 20; i++)\n    {\n        _uv -= distance;\n        float movement = (random * 20.0) * float(i + 1);\n        vec2 param_5 = uv + mod(vec2(movement * sin(random * 0.5), -movement), vec2(1000.0));\n        float _196 = FLT_flutter_local_random2d(param_5);\n        float dither = _196 * 2.0;\n        vec2 param_6 = _uv + (distance * dither);\n        vec2 param_7 = uv;\n        vec2 param_8 = lightSource;\n        vec4 param_9 = FLT_flutter_local_sampleTexture(param_6);\n        vec4 stepped_map = FLT_flutter_local_occlusion(param_7, param_8, param_9);\n        stepped_map *= (illumination_decay * weight);\n        illumination_decay *= 0.87999999523162841796875;\n        map += stepped_map;\n    }\n    float lum = dot(map.xyz, vec3(0.2125999927520751953125, 0.715200006961822509765625, 0.072200000286102294921875));\n    colour += vec3(map.xyz * exposure);\n    return vec4(colour, lum);\n}\n\nvoid FLT_main()\n{\n    sourceY = scrollFraction;\n    resolution = vec2(width, height);\n    lightSource = vec2(sourceX, sourceY);\n    vec2 pos = flutter_FragCoord.xy;\n    vec2 uv_1 = pos / vec2(width, height);\n    vec2 param_10 = uv_1;\n    vec2 param_11 = pos;\n    fragColor = FLT_flutter_local_fragment(param_10, param_11);\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
  "stage": 1,
  "target_platform": 0,
  "uniforms": [
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 3,
      "name": "scrollFraction",
      "rows": 1,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 0,
      "name": "width",
      "rows": 1,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 1,
      "name": "height",
      "rows": 1,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 2,
      "name": "sourceX",
      "rows": 1,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 0,
      "columns": 1,
      "location": 8,
      "name": "tNoise",
      "rows": 1,
      "type": 12
    },
    {
      "array_elements": 0,
      "bit_width": 0,
      "columns": 1,
      "location": 7,
      "name": "tInput",
      "rows": 1,
      "type": 12
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 5,
      "name": "lightStrength",
      "rows": 1,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 4,
      "name": "density",
      "rows": 1,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 6,
      "name": "weight",
      "rows": 1,
      "type": 10
    }
  ]
}